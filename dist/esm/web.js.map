{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAK5C,MAAM,OAAO,OAAQ,SAAQ,SAAS;IAGpC;QACE,KAAK,CAAC;YACJ,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,WAAW,CACT,SAAiB,EACjB,QAAyC;QAEzC,IAAI,SAAS,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,iBAAiB,GAAG,CAAC,KAAY,EAAE,EAAE;gBACxC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;oBACvC,QAAQ,CAAE,KAAsC,CAAC,MAAM,CAAC,CAAC;iBAC1D;YACH,CAAC,CAAC;YAEF,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC9D;QAED,MAAM,MAAM,GAAyB;YACnC,MAAM,EAAE,KAAK,IAAI,EAAE;gBACjB,IAAI,SAAS,KAAK,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACvD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAChE,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;iBACpC;YACH,CAAC;SACF,CAAC;QAEF,MAAM,aAAa,GACjB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE1B,OAAO,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,uBAAuB,CAAC,QAA8B;QACpD,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { PluginListenerHandle } from '@capacitor/core';\n\nimport type { GamePlugin, CustomEventData } from './definitions';\n\nexport class GameWeb extends WebPlugin implements GamePlugin {\n  private gameEventCallback?: (event: Event) => void;\n\n  constructor() {\n    super({\n      name: 'Game',\n      platforms: ['web'],\n    });\n  }\n\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  addListener(\n    eventName: string,\n    callback: (info: CustomEventData) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle {\n    if (eventName === 'gameEvent') {\n      this.gameEventCallback = (event: Event) => {\n        if (event && event.type === 'gameEvent') {\n          callback((event as CustomEvent<CustomEventData>).detail);\n        }\n      };\n\n      window.addEventListener('gameEvent', this.gameEventCallback);\n    }\n\n    const handle: PluginListenerHandle = {\n      remove: async () => {\n        if (eventName === 'gameEvent' && this.gameEventCallback) {\n          window.removeEventListener('gameEvent', this.gameEventCallback);\n          this.gameEventCallback = undefined;\n        }\n      },\n    };\n\n    const handlePromise: Promise<PluginListenerHandle> =\n      Promise.resolve(handle);\n\n    return Object.assign(handlePromise, handle);\n  }\n\n  removeGameEventListener(listener: PluginListenerHandle): void {\n    listener.remove();\n  }\n}\n"]}